<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:cloud="http://www.opencredo.com/schema/si/cloud/storage"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration-1.0.xsd
			http://www.opencredo.com/schema/si/cloud/storage
			http://www.opencredo.com/schema/si/cloud/storage/opencredo-si-cloud-storage.xsd">

	<beans:bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:value>classpath:org/opencredo/cloud/storage/samples/s3quote/aws.properties
			</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="awsCredentials"
		class="org.opencredo.cloud.storage.s3.AwsCredentials">
		<beans:constructor-arg value="${awsKey}" />
		<beans:constructor-arg value="${awsSecretKey}" />
	</beans:bean>

	<beans:bean id="s3Template" class="org.opencredo.cloud.storage.s3.S3Template">
		<beans:constructor-arg ref="awsCredentials" />
		<beans:constructor-arg value="${awsS3QuoteBucketName}" />
	</beans:bean>

	<channel id="tickers" />
	<gateway id="s3TickerUploader"
		service-interface="org.opencredo.cloud.storage.samples.s3quote.S3TickerUploader"
		default-request-channel="tickers" />

	<cloud:outbound-channel-adapter
		container="${awsS3QuoteBucketName}" template="s3Template" channel="tickers" />

	<channel id="s3tickers" />
	<cloud:inbound-channel-adapter container="${awsS3QuoteBucketName}"
		template="s3Template" channel="s3tickers" filter="acceptOnceS3ObjectListFilter">
		<poller>
			<interval-trigger interval="5000" />
		</poller>
	</cloud:inbound-channel-adapter>

	<channel id="s3tickerMessageContents" />
	<!-- BlobDetails SI Transformer -->
	<service-activator input-channel="s3tickers"
		ref="s3MessageTransformer" method="transform" output-channel="s3tickerMessageContents" />

	<!-- BlobDetails Transformer bean -->
	<beans:bean id="s3MessageTransformer"
		class="org.opencredo.cloud.storage.si.transformer.internal.BlobToStringTransformer">
		<beans:constructor-arg ref="s3Template" />
	</beans:bean>

	<service-activator input-channel="s3tickerMessageContents"
		ref="s3quoteService" method="lookupQuote" />
	<beans:bean id="s3quoteService"
		class="org.opencredo.cloud.storage.samples.s3quote.S3QuoteService" />

	<beans:bean id="acceptOnceS3ObjectListFilter"
		class="org.opencredo.cloud.storage.si.filter.internal.AcceptOnceBlobNameFilter" />
</beans:beans>
